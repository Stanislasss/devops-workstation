##---------------------------------------------------------------------------
## @(#)$Id$
##title          :.bashrc
##description    :Example devops workstation .bashrc file
##author         :Danny W Sheehan
##date           :March 2015
##
##  Configures bash prompt to include
##     - git - branch 
##     - Python environment - working project
##     - ruby environment - ruby and gem set versions
##
##  Also adjusts title bar of terminal session to correctly display host
##  you are logged in at.
##

# personal preferences.
# umask 0077
mkdir -p ~/.backups ~/.tmp ~/.local/bin

export EDITOR=vi
export PROJECT_HOME=~/PROJECTS
export WORKON_HOME=~/.virtualenvs

export PYENV_VERSION="2.7.12"
export PYENV_VIRTUALENV_DISABLE_PROMPT=1

export EC2_INI_PATH=/etc/ansible/ec2.ini 

WEATHER="Brisbane?m"

# Uncomment the following line if you don't like systemctl's auto-paging feature:
# export SYSTEMD_PAGER=

# guard to avoid breaking scp and sftp if output is displayed.
# [[ $- == *i* ]] || return 0
#
# much quicker method
[ -z "$PS1" ] && return

export HISTCONTROL=ignoredups

# show colors when grepping through logs
my_grep_options=(--color=auto --exclude-dir=.cvs --exclude-dir=.git --exclude-dir=.svn) alias grep='grep $my_grep_options' egrep='grep -E $my_grep_options' fgrep='grep -F $my_grep_options' 

# User specific aliases and functions



set_titlebar() {
  case $TERM in
    *xterm*|ansi|rxvt)
      printf "\033]0;%s\007" "$*"
        ;;
    esac
}


# install  colordiff package :)
alias cdiff='colordiff'

alias mount='mount |column -t'

alias h='history'
alias j='jobs -l'

alias path='echo -e ${PATH//:/\\n}'
alias nowtime='date +"%T"'
alias nowdate='date +"%Y%m%d"'

# get GPU ram on desktop 
alias gpumeminfo='grep -i --color memory /var/log/Xorg.0.log'

# always resume/continue partial downloads.
alias wget='wget -c'


mkcd()    { mkdir "$1" && cd "$1"; }
calc()    { awk "BEGIN{ print $* }" ;}
hex2dec() { echo $((16#$1)); }
dec2hex() { awk -v num=$1 'BEGIN { printf "%x\n", num}'; }
mktar()   { tar cztf "${1%%/}.tar.gz" "${1%%/}/"; }
bu()      { cp $1 ~/.backups/$(basename $1)-$(date +%Y%m%d%H%M).bk; }

uncomment() { egrep -v '^[[:space:]]*$|^ *#' "$1"; }

get_sha() { git rev-parse --short HEAD 2>/dev/null; }

update()  { git pull --rebase "$1";git submodule update --init --recursive "$1"; }

encrypt() { gpg -ac --no-options "$1"; }
decrypt() { gpg --no-options "$1"; }
weather() { curl "http://wttr.in/${1-${WEATHER}}"; }
asn()     { whois -h asn.shadowserver.org "origin $1"; }


httpdebug () { /usr/bin/curl $@ -o /dev/null -w "dns: %{time_namelookup} connect: %{time_connect} pretransfer: %{time_pretransfer} starttransfer: %{time_starttransfer} total: %{time_total}\n" ; }

# apt install pandoc
md2html() { mkdir ./html;pandoc -f markdown -t html "$1" > ./html/${1%.*}.html; }
# recommend: qupzilla as lightweight browser qupzill ./html/<file>.html

# list files that are puppet managed
puppetmanaged() {  sudo find /etc -type f -exec grep -li "^#.*puppet" {} +; }


alias dreaded='ps axl | awk '\''$10 ~ /D/'\'''
alias memhogs='ps wwaxm -o pid,stat,vsize,rss,time,command | head -10'
alias cpuhogs='ps wwaxr -o pid,stat,%cpu,time,command | head -10'
alias myip='dig +short myip.opendns.com @resolver1.opendns.com'

# processes with biggest open files
fopenmemhogs() { sudo lsof -s | awk '$5 == "REG"' | sort -n -r -k 7,7 | head -n 50; }

# processes with most open files
fopencounthogs() { sudo sudo lsof | awk '$5 == "REG" {freq[$2]++ ; names[$2] = $1 ;} END {for (pid in freq) print freq[pid], names[pid], pid ; }' | sort -n -r -k 1,1; }



# get web server headers #
alias header='curl -I'

# find out if remote server supports gzip / mod_deflate or not #
alias headerc='curl -I --compress'

# Quick way to serve files in HTTP from the local dir (be careful)
alias webs='python -m SimpleHTTPServer'

# tail all logs
alias logs="find /var/log -type f -exec file {} \; | grep 'text' | cut -d' ' -f1 | sed -e's/:$//g' | grep -v '[0-9]$' | xargs tail -f"

# show fwrules
alias fwrules='sudo /sbin/iptables -L -n -v --line-numbers'

# show only hidden files
alias hidden="ls -drt1 \.* | egrep -v \"^(\.|\.\.)$\""

if [ "$UNAME" = Darwin ]; then
  trash()     { command mv "$@" ~/.Trash ; }
  spotlight() { mdfind "kMDItemDisplayName == '$@'wc"; }
fi


GPROMPT="https://github.com/git/git/raw/master/contrib/completion/git-prompt.sh"
if [ -s /usr/share/git-core/contrib/completion/git-prompt.sh ];then
  source /usr/share/git-core/contrib/completion/git-prompt.sh
elif [ -s /usr/lib/git-core/git-sh-prompt ];then
  source /usr/lib/git-core/git-sh-prompt
elif [ -s ~/.git-prompt.sh ];then
  source ~/.git-prompt.sh
elif which wget > /dev/null && wget -q $GPROMPT -O ~/.git-prompt.sh
then
  source ~/.git-prompt.sh
else
  return
fi

# https://blog.shichao.io/2014/10/01/setup_virtualenvwrapper_with_pyenv_using_pyenv_virtualenvwrapper.html
# Create a virtualenv from the system version:
# $   mkvirtualenv env1 -p $(which python)
# Similarly, create a virtualenv from 3.4:
# $   mkvirtualenv env2 -p $(which python3.4)
# #
export PATH="$HOME/.pyenv/bin:$PATH"
if which pyenv > /dev/null 2>&1; then
  # pyenv
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"

  if pyenv commands | egrep -q "^virtualenvwrapper"; then
    pyenv virtualenvwrapper
  else
    return
  fi
elif [ -s /usr/bin/virtualenvwrapper.sh ];then
  source /usr/bin/virtualenvwrapper.sh
elif [ -s /usr/local/bin/virtualenvwrapper.sh ];then
  source /usr/local/bin/virtualenvwrapper.sh
else
  # SUGGEST: install python-pip then sudo -i pip install virtualenv virtualenvwrapper
  return
fi


export PATH="$PATH:$HOME/.rvm/bin" 
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" 

export PATH=$PATH:~/.local/bin
# pip install --user --upgrade speedtest_cli
alias speedtest="which pip > /dev/null && pip -q show speedtest-cli && speedtest-cli --simple"

alias pipup='pip freeze --local | grep -v '^\-e' | cut -d = -f 1  | xargs pip install -U'

# Reset
Color_Off="\[\033[0m\]"       # Text Reset

# Regular Colors
Black="\[\033[0;30m\]"        # Black
Red="\[\033[0;31m\]"          # Red
Green="\[\033[0;32m\]"        # Green
Yellow="\[\033[0;33m\]"       # Yellow
Blue="\[\033[0;34m\]"         # Blue
Purple="\[\033[0;35m\]"       # Purple
Cyan="\[\033[0;36m\]"         # Cyan
White="\[\033[0;37m\]"        # White

GIT_PS1_SHOWDIRTYSTATE=1
GIT_PS1_SHOWCOLORHINTS=1
GIT_PS1_SHOWSTASHSTATE=1
GIT_PS1_SHOWUPSTREAM="auto"

PROMPT_COMMAND='__git_ps1 "[${Yellow}$(echo -e code $?)$Color_Off]\n${VIRTUAL_ENV:+[${Yellow}$(basename $VIRTUAL_ENV)$Color_Off]\n}${GEM_HOME:+[${Cyan}$(rvm-prompt i v p g)$Color_Off]\n}" "\h:\W \u\\\$ " "[%s $(get_sha)]\n";set_titlebar "$USER@${HOSTNAME%%.*} $(basename $PWD)"'
