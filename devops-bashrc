##---------------------------------------------------------------------------
## @(#)$Id$
##title          :.bashrc
##description    :Example devops workstation .bashrc file
##author         :Danny W Sheehan
##date           :March 2015
##
##  Configures bash prompt to include
##     - git - branch 
##     - Python environment - working project
##     - ruby environment - ruby and gem set versions
##
##  Also adjusts title bar of terminal session to correctly display host
##  you are logged in at.
##

# personal preferences.
umask 0077
mkdir -p ~/.backups ~/.tmp ~/bin
export PROJECT_HOME=~/PROJECTS

# Uncomment the following line if you don't like systemctl's auto-paging feature:
# export SYSTEMD_PAGER=

# guard to avoid breaking scp and sftp if output is displayed.
# [[ $- == *i* ]] || return 0
#
# much quicker method
[ -z "$PS1" ] && return

# show colors when grepping through logs
my_grep_options=(--color=auto --exclude-dir=.cvs --exclude-dir=.git --exclude-dir=.svn)
alias grep='grep $my_grep_options' egrep='grep -E $my_grep_options' fgrep='grep -F $my_grep_options'


# User specific aliases and functions



set_titlebar() {
  case $TERM in
    *xterm*|ansi|rxvt)
      printf "\033]0;%s\007" "$*"
        ;;
    esac
}



mkcd()    { mkdir "$1" && cd "$1"; }
calc()    { awk "BEGIN{ print $* }" ;}
hex2dec() { echo $((16#$1)); }
dec2hex() { awk -v num=$1 'BEGIN { printf "%x\n", num}'; }
mktar()   { tar cztf "${1%%/}.tar.gz" "${1%%/}/"; }
bu()      { cp $1 ~/.backups/$(basename $1)-$(date +%Y%m%d%H%M).bk; }

get_sha() { git rev-parse --short HEAD 2>/dev/null; }


if [ -s /usr/share/git-core/contrib/completion/git-prompt.sh ];then
  source /usr/share/git-core/contrib/completion/git-prompt.sh
elif [ -s /usr/lib/git-core/git-sh-prompt ];then
  source /usr/lib/git-core/git-sh-prompt
elif [ -s ~/bin/git-prompt.sh ];then
  # wget https://github.com/git/git/raw/master/contrib/completion/git-prompt.sh
  source ~/bin/git-prompt.sh
fi


if [ -s /usr/bin/virtualenvwrapper.sh ];then
  source /usr/bin/virtualenvwrapper.sh
elif [ -s /usr/local/bin/virtualenvwrapper.sh ];then
  source /usr/local/bin/virtualenvwrapper.sh
else 
  VENV=$(which virtualenvwrapper.sh 2> /dev/null)
  if [ -n "$VENV" ];then
    source $VENV
  fi
fi

export PATH="$PATH:$HOME/.rvm/bin" 
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" 


# Reset
Color_Off="\[\033[0m\]"       # Text Reset

# Regular Colors
Black="\[\033[0;30m\]"        # Black
Red="\[\033[0;31m\]"          # Red
Green="\[\033[0;32m\]"        # Green
Yellow="\[\033[0;33m\]"       # Yellow
Blue="\[\033[0;34m\]"         # Blue
Purple="\[\033[0;35m\]"       # Purple
Cyan="\[\033[0;36m\]"         # Cyan
White="\[\033[0;37m\]"        # White

GIT_PS1_SHOWDIRTYSTATE=1
GIT_PS1_SHOWCOLORHINTS=1
GIT_PS1_SHOWSTASHSTATE=1
GIT_PS1_SHOWUPSTREAM="auto"

PROMPT_COMMAND='__git_ps1 "[${Yellow}$(echo -e code $?)$Color_Off]\n${VIRTUAL_ENV:+[${Yellow}$(basename $VIRTUAL_ENV)$Color_Off]\n}${GEM_HOME:+[${Cyan}$(rvm-prompt i v p g)$Color_Off]\n}" "\h:\W \u\\\$ " "[%s $(get_sha)]\n";set_titlebar "$USER@${HOSTNAME%%.*} $(basename $PWD)"'

#
# Autolaunch ssh-agent
#

# source: https://help.github.com/articles/working-with-ssh-key-passphrases/#auto-launching-ssh-agent-on-msysgit

# Note: ~/.ssh/environment should not be used, as it
#       already has a different purpose in SSH.

env=~/.ssh/agent.env

# Note: Don't bother checking SSH_AGENT_PID. It's not used
#       by SSH itself, and it might even be incorrect
#       (for example, when using agent-forwarding over SSH).

agent_is_running() {
    if [ "$SSH_AUTH_SOCK" ]; then
        # ssh-add returns:
        #   0 = agent running, has keys
        #   1 = agent running, no keys
        #   2 = agent not running
        ssh-add -l >/dev/null 2>&1 || [ $? -eq 1 ]
    else
        false
    fi
}

agent_has_keys() {
    ssh-add -l >/dev/null 2>&1
}

agent_load_env() {
    . "$env" >/dev/null
}

agent_start() {
    (umask 077; ssh-agent >"$env")
    . "$env" >/dev/null
}

if ! agent_is_running; then
    agent_load_env
fi

# if your keys are not stored in ~/.ssh/id_rsa or ~/.ssh/id_dsa, you'll need
# to paste the proper path after ssh-add
if ! agent_is_running; then
    agent_start
    ssh-add
elif ! agent_has_keys; then
    ssh-add
fi

unset env
