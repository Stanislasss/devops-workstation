---


- name: "get packer latest version"
  uri:
    url: "https://releases.hashicorp.com/packer"
    method: GET
    return_content: yes
  register: uri_output
  check_mode: no

- set_fact:
    packer_ver: "{{ uri_output.content | regex_findall(ver_regex) | max }}"
  vars:
    ver_regex: '<a href=\"/packer/([\d\.]+)/'

- debug: var=packer_ver

- name: "Download Packer"
  get_url:
    url: https://releases.hashicorp.com/packer/{{ packer_ver }}/packer_{{ packer_ver }}_linux_amd64.zip
    dest: /usr/local/src/packer_{{ packer_ver }}_linux_amd64.zip

- name: "Extract and install Packer"
  unarchive:
    src: /usr/local/src/packer_{{ packer_ver }}_linux_amd64.zip
    dest: /usr/local/bin
    copy: no


- name: "Deploy Debian: Ensure apt-transport-https is installed"
  apt:
    name=apt-transport-https
    state=present

- name: "Deploy Debian: repository - Oracle key"
  apt_key:
    id: 'B0FAB3A13B907435925D9C954422A4B98AB5139'
    url: 'https://www.virtualbox.org/download/oracle_vbox.asc'
    state: present

- name: "Deploy Debian: repository - Oracle 2016 key"
  apt_key:
    id: 'B9F8D658297AF3EFC18D5CDFA2F683C52980AECF'
    url: 'https://www.virtualbox.org/download/oracle_vbox_2016.asc'
    state: present

- name: "Deploy Debian: repository - riot matrix im client"
  apt_key:
    url: 'https://riot.im/packages/debian/repo-key.asc'
    state: present

- name: "Deploy Debian: repository - Microsoft"
  apt_key:
    url: 'https://packages.microsoft.com/keys/microsoft.asc'
    state: present

- name: "Deloy Debian: repository - chrome"
  apt_key:
    url: 'https://dl.google.com/linux/linux_signing_key.pub'
    state: present

- name: "Deploy Debian: repository - insync"
  apt_key:
    keyserver: 'keyserver.ubuntu.com'
    id: 'ACCAF35C'

- name: "Deploy Debian: repository - hashicorp"
  apt_key:
    keyserver: 'keyserver.ubuntu.com'
    id: '51852D87348FFC4C'

- name: "Deploy Debian: docker "
  apt_key:
    url: 'https://download.docker.com/linux/ubuntu/gpg'
    id: '9DC858229FC7DD38854AE2D88D81803C0EBFCD88'

- name: "Deploy Debian: google cloud sdk "
  apt_key:
    url: 'https://packages.cloud.google.com/apt/doc/apt-key.gpg'
    state: present


# https://stackoverflow.com/questions/41102299/unable-to-install-any-pip-module-module-object-has-no-attribute-cryptography 
- name: "Deploy Debian: install base packages"
  apt:
    pkg: '{{ item }}'
    state: present
    update_cache: yes
    cache_valid_time: 3600
  with_items: 
    - git
    - git-flow
    - meld
    - jq
    - encfs
    - python-pip
    - python-dev
    - python-virtualenv
    - build-essential
    - libssl-dev
    - libffi-dev
    - libvirt-dev
    - librsync-dev
    - libpcsclite-dev
    - swig
    - lsyncd
    - network-manager-openconnect-gnome
    - libpam-google-authenticator
    - gnome-shell
    - ubuntu-gnome-desktop
    - exfat-fuse
    - exfat-utils
    - apt-transport-https 
    - software-properties-common
    - ca-certificates
    - curl


- name: "Deploy Debian: Add repos"
  apt_repository:
    repo: "{{ item }}"
    state: present
  with_items:
    - 'deb http://download.virtualbox.org/virtualbox/debian {{ ansible_distribution_release }} contrib'
    - 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main'
    - 'deb [arch=amd64] https://packages.microsoft.com/ubuntu/16.04/prod {{ ansible_distribution_release }} main'
    - 'ppa:sebastian-stenzel/cryptomator'
    - 'deb http://apt.insynchq.com/ubuntu {{ ansible_distribution_release }} non-free contrib'
    - 'deb https://riot.im/packages/debian/ {{ ansible_distribution_release }} main'
    - 'deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable'
    - 'deb https://packages.cloud.google.com/apt cloud-sdk-{{ ansible_distribution_release }} main'
  register: repos 

- name: "Deploy Debian: install repo packages"
  apt:
    pkg: '{{ item }}'
    state: present
    update_cache: yes
    cache_valid_time: 3600
  with_items: 
    - dkms
    - virtualbox-5.2
    - google-chrome-stable
    - powershell
    - cryptomator
    - insync
    - riot-web
    - docker-ce
    - google-cloud-sdk
    - google-cloud-sdk-app-engine-python
    - google-cloud-sdk-app-engine-python-extras
    - kubectl

- name: "get vagrant latest version"
  uri:
    url: "https://releases.hashicorp.com/vagrant/index.json"
    method: GET
    body: JSON
    return_contents: yes 
  register: json_output
  check_mode: no

#
# Find latest version of vagrant.
#
- mame: "set version keys"
  set_fact:
    vagrant_ver: "{{ json_output.json | json_query(ver_qry) }}"
  vars:
    ver_qry: "versions.keys(@) | sort(@) | max(@)"
- debug: var=vagrant_ver

#
# Find installation url
#
- mame: "set version url "
  set_fact:
    vagrant_url: "{{ json_output.json | json_query(url_qry) }}"
  vars:
    url_qry: "versions.\"{{ vagrant_ver}}\".builds[?os == 'debian' && arch == 'x86_64'].url"
- debug: var=vagrant_url


- name: "Deploy Debian: Install debian packages directly from web"
  apt:
    deb: "{{ item }}"
    update_cache: yes
    cache_valid_time: 3600
  with_items: 
    - 'https://release.gitkraken.com/linux/gitkraken-amd64.deb'
    - '{{ vagrant_url }}'

- name: "Deploy Debian: Install virtualenvwrapper"
  pip:
    name: virtualenvwrapper
    executable: pip2
    extra_args: --user

- name: "Deploy Debian: Install other user packages"
  apt:
    pkg: '{{ item }}'
    state: present
    update_cache: yes
    cache_valid_time: 3600
  with_items: 
    - 'chromium-browser'
    - 'keepassx'
    - 'hexchat'
    - 'terminator'
    - 'tcpdump'
    - 'lynx'
    - 'p7zip-full'
    - 'whois'
    - 'nmap'
    - 'dnsutils'
    - 'net-tools'
    - 'pandoc'
    - 'seahorse-nautilus'
    - 'seahorse-sharing'
    - 'icedtea-netx'
    - 'mariadb-client'
    - 'npm'

- name: "Deploy Debian: Install kvm packages"
  apt:
    pkg: '{{ item }}'
    state: present
    update_cache: yes
    cache_valid_time: 3600
  with_items:
    - 'virt-viewer'
    - 'virt-manager'
    - 'qemu-kvm'
    - 'libvirt-bin'
    - 'virtinst'
    - 'bridge-utils'
    - 'cpu-checker'

- name: "Deploy Debian: Install yubi packages"
  apt:
    pkg: "{{ item }}"
    state: present
    update_cache: yes
    cache_valid_time: 3600
  with_items: 
    - 'yubioath-desktop'
    - 'yubikey-personalization-gui'

